Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.

According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.

 

Example 1:

Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.
Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.
Example 2:

Input: citations = [1,3,1]
Output: 1
 

Constraints:

n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000

********************************************* Solution
/**
 * @param {number[]} citations
 * @return {number}
 */
 var countSort = function (heights){
     let max = heights[0];
     for (let i=0 ; i<heights.length ; ++i){
         if (max<heights[i]){
             max = heights[i];
         }
     }
     let count = new Array(max + 1 ).fill(0);
     for (let i=0 ; i<heights.length ; ++i){
         count[heights[i]]++;
     }
     for (let i=1 ; i<max+1 ; ++i){
         count[i]+=count[i-1];
     }
     let outArray = new Array(heights.length);
     for (let i=0 ; i<heights.length ; ++i){
         outArray[count[heights[i]]-1] = heights[i];
         count[heights[i]]--;
     }
     let j=0;
     for (let i= heights.length-1; i>=0 ; --i){
         heights[j] = outArray[i];
         j++;
     }
 }
var hIndex = function(citations) {

    countSort(citations);
    let h=0;
    for (let i=0 ; i<citations.length ; ++i){
        if (citations[i]>=(i+1)){
            h++;
        }
    }
    return h;
};